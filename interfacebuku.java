/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pengelolaanbuku2;
/**
 *
 * @author HUSNUL KHOTIMAH
 */
import java.awt.HeadlessException;
import java.sql.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import pengelolaanbuku2.koneksi;
import javax.swing.table.*;


//untuk laporan data / tabel data
import javax.swing.table.*;

public class interfacebuku extends javax.swing.JFrame {

    /**
     * Creates new form interfacebuku
     */
    
    Connection koneksi = pengelolaanbuku2.koneksi.getKoneksi(); //utk koneksi ke database
    Statement databuku; //kirim query sql ke database
    ResultSet tokobuku; //menampilkan hasil dari query diatas
    Boolean ketemu = false;
    
    public interfacebuku() {
        initComponents();
    }
    
    private void kosong() {
        txtJudul.setText("");
        txtPenulis.setText("");
        txtHarga.setText("");
        txtStok.setText("");

        btnSimpan.setText("Tambah");
        txtJudul.setEditable(true);
//        btnEdit.setEnabled(false);
    }

    public void tampildata() {
        try {
            tokobuku = (ResultSet) koneksi.createStatement();
            databuku = (Statement) databuku.executeQuery("SELECT * FROM mengelol_buku");

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Judul");
            model.addColumn("Penulis");
            model.addColumn("Harga");
            model.addColumn("Stok");

            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);

            while (tokobuku.next()) {
                Object[] data = {
                    tokobuku.getString("judul"),
                    tokobuku.getString("penulis"),
                    tokobuku.getString("harga"),
                    tokobuku.getString("stok"),
                };
                model.addRow(data);
                tblData.setModel(model);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ada Kesalahan " + e.getMessage());
        }
    }

    private void Caridata() {
        try {
            tokobuku = (ResultSet) koneksi.createStatement();
            databuku = (Statement) databuku.executeQuery("SELECT * FROM mengelola_buku WHERE judul LIKE '%" + txtSearch.getText() + "% '||"
                    + "penulis LIKE '%" + txtSearch.getText() + "%' || "
                    + "harga LIKE '%" + txtSearch.getText() + "%' ||"
                    + "stok LIKE '%" + txtSearch.getText() + "%'");

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Judul");
            model.addColumn("Penulis");
            model.addColumn("Harga");
            model.addColumn("Stok");
            
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);

            while (tokobuku.next()) {
                Object[] data = {
                    tokobuku.getString("judul"),
                    tokobuku.getString("penulis"),
                    tokobuku.getString("harga"),
                    tokobuku.getString("stok"),
                };
                model.addRow(data);
                tblData.setModel(model);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ada Kesalahan " + e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        lblJudul = new javax.swing.JLabel();
        lblPenulis = new javax.swing.JLabel();
        lblHarga = new javax.swing.JLabel();
        lblStok = new javax.swing.JLabel();
        txtPenulis = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        txtStok = new javax.swing.JTextField();
        txtJudul = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 255));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel1.setText("DAFTAR BUKU");
        jLabel1.setMaximumSize(new java.awt.Dimension(90, 35));

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Judul", "Penulis", "Harga", "Stok"
            }
        ));
        jScrollPane1.setViewportView(tblData);

        lblJudul.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        lblJudul.setText("Judul");

        lblPenulis.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        lblPenulis.setText("Penulis");

        lblHarga.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        lblHarga.setText("Harga");

        lblStok.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        lblStok.setText("Stok");

        txtPenulis.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N

        txtHarga.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N

        txtStok.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N

        txtJudul.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJudulActionPerformed(evt);
            }
        });

        btnSimpan.setBackground(new java.awt.Color(255, 255, 255));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnCari.setBackground(new java.awt.Color(255, 255, 255));
        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 255, 255));
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPenulis)
                            .addComponent(lblJudul)
                            .addComponent(lblHarga)
                            .addComponent(lblStok))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtJudul, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(txtPenulis)
                            .addComponent(txtHarga)
                            .addComponent(txtStok)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHapus))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(btnSimpan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblJudul))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(txtJudul, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPenulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPenulis))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHarga))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStok))
                .addGap(18, 18, 18)
                .addComponent(btnSimpan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari)
                    .addComponent(btnHapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
    //validasi data
        try {
            // simpan data
            databuku = koneksi.createStatement();
            if (txtJudul.getText().equals("")
                || txtPenulis.getText().equals("")
                || txtHarga.getText().equals("")
                || txtStok.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Data Tidak Boleh Kosong", "Validasi data", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            //aksi simpan data
            if (btnSimpan.getText() == "Simpan") {
                String cek = "SELECT * FROM mengelola_buku WHERE judul = '" + txtJudul.getText() + "'";
                tokobuku = databuku.executeQuery(cek);
                if (tokobuku.next()) {
                    JOptionPane.showMessageDialog(null, "Upss.... Judul Ini Sudah Terdaftar");
                } else {
                    String sql = "INSERT INTO judul VALUE ('" + txtJudul.getText()
                    + "','" + txtJudul.getText()
                    + "','" + txtPenulis.getText()
                    + "','" + txtHarga.getText()
                    + "','" + txtStok.getText();
                    databuku.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Simpan Data Berhasil");
                    kosong();
                    tampildata();
                }
            } else {
                //aksi ubah data
                String update = "UPDATE mengelola_buku SET judul = '" + txtJudul.getText()
                + "', email = '" + txtPenulis.getText()
                + "', telepon = '" + txtHarga.getText()
                + "', alamat = '" + txtStok.getText()
                + "' WHERE judul = '" + txtJudul.getText() + "'";

                databuku.executeUpdate(update);
                JOptionPane.showMessageDialog(null, "Edit Data Berhasil");

                kosong();
                tampildata();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Simpan Data Gagal " + e.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        Caridata();
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        if (txtJudul.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih data yang akan di hapus");
        } else {
            int jawab = JOptionPane.showConfirmDialog(null, "Data Ini akan dihapus, lanjutkan?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (jawab == 0) {
                try {
                    databuku = koneksi.createStatement();
                    String sql = "DELETE FROM mengelola_buku WHERE judul = '" + txtJudul.getText() + "'";
                    databuku.executeUpdate(sql);

                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
                    kosong();
                    tampildata();

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Data Tidak Dapat Dihapus" + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed
 
    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJudulActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfacebuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfacebuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfacebuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfacebuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfacebuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHarga;
    private javax.swing.JLabel lblJudul;
    private javax.swing.JLabel lblPenulis;
    private javax.swing.JLabel lblStok;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtPenulis;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStok;
    // End of variables declaration//GEN-END:variables
}
